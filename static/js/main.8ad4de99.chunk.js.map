{"version":3,"sources":["components/navbar.jsx","components/back.jsx","components/card.jsx","components/details.jsx","components/filter.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","React","Component","Back","onClick","this","props","goToHome","Card","goToDetails","people","name","gender","birth_year","height","mass","films","fav","peopleClick","addToFav","src","alt","Details","setState","state","Filter","goToSection","section","goToFav","App","forAdd","map","error","fetch","then","res","json","data","results","result","length","catch","err","console","log","alert","Fragment","key","currentSection","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ad4de99.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Navbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar\"><h1>Star wars characters</h1></nav>\r\n        )}\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Back extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"back\" onClick={this.props.goToHome}>&#60; Volver al listado</div>\r\n        )}\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Card extends React.Component {\r\n\r\n    goToDetails = () => {\r\n        var people = {name: this.props.name, gender: this.props.gender, birth_year: this.props.birth_year, height: this.props.height, mass: this.props.mass, films: this.props.films, fav: this.props.fav};\r\n        this.props.peopleClick(people);\r\n    }\r\n\r\n    addToFav = () => {\r\n        var people = {name: this.props.name};\r\n        this.props.addToFav(people);\r\n    }\r\n\r\n    render() {\r\n        const { name, gender, birth_year } = this.props;\r\n        return (\r\n            <div className=\"card\">\r\n                <h2 onClick={this.goToDetails} >{name}</h2> <img onClick={this.addToFav} src={this.props.fav === false ? \"./noFav.png\" : \"./fav.png\"} alt=\"fav\"/> <br/>\r\n                <p onClick={this.goToDetails}>{gender} | birth date: {birth_year}</p>\r\n            </div>\r\n        )}\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Details extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          fav: this.props.fav,\r\n        };\r\n      }\r\n\r\n\r\n    addToFav = () => {\r\n        var people = {name: this.props.name};\r\n        this.props.addToFav(people);\r\n        this.setState({fav: !this.state.fav});\r\n    }\r\n\r\n    render() {\r\n        const { name, gender, birth_year, height, mass, films } = this.props;\r\n        return (\r\n            <div className='details'>\r\n                <div>\r\n                    <h1>{name}</h1> <img onClick={this.addToFav} className=\"img\" src={this.state.fav === false ? \"./noFav.png\" : \"./fav.png\"} alt=\"fav\" />\r\n                    <h3>{gender}</h3>\r\n                    <h3>birth date: {birth_year}</h3>\r\n                    <h3>Amount of films: {films}</h3>\r\n                    <h3>Height: {height} | Mass: {mass}</h3>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Filter extends React.Component {\r\n\r\n    goToSection = () => {\r\n        if (this.props.section === 'home') {\r\n            this.props.goToFav();\r\n        } else {\r\n            this.props.goToHome();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.goToSection} className={this.props.section === 'home' ? \"filter\" : \"filter active\"}>filtrar por favoritos</div>\r\n        )}\r\n}\r\n","\nimport React from 'react';\nimport Navbar from './components/navbar';\nimport Back from './components/back';\nimport Card from './components/card';\nimport Details from './components/details';\nimport Filter from './components/filter';\n\n// import React from 'react';\n// export default Back;\n// \"homepage\": \"https://brianacos.github.io/star-wars-app/\",\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      section: 'home',\n      people: [],\n      error: '',\n      peopleClick: [],\n    };\n  }\n\n//FETCH PARA BUSCAR LOS 10 PRIMERO PERSONAJES DE STAR WARS\n  UNSAFE_componentWillMount() {\n    fetch('https://swapi.dev/api/people/')\n      .then(res => res.json())\n      .then(data => {\n        this.setState({\n          people: data.results.map((result) => {\n            const { name, gender, birth_year, height, mass } = result;\n            const films = result.films.length;\n            const fav = false;\n            const obj = {name, gender, birth_year, height, mass, films, fav };\n            return obj\n          }),\n          error: '',\n        });\n      })\n      //SI NO HAY RESPUESTA DE LA API\n      .catch((err) => {\n        this.setState({\n          people: [],\n          error: 'Error al cargar personajes',\n        });\n        console.log(err);\n        alert('error al cargar personajes');\n      });\n  }\n\n  currentSection() {\n    //SECCION HOME\n    if (this.state.section === 'home') {\n      return (\n        <React.Fragment>\n          <Filter section={this.state.section} goToFav={this.goToFav} />\n          <div className=\"grid\">\n            {this.state.people.map(people => <Card addToFav={this.addToFav} peopleClick={this.peopleClick} fav={people.fav} name={people.name} gender={people.gender} birth_year={people.birth_year} height={people.height} mass={people.mass} films={people.films} key={people.name} />)}\n          </div>\n        </React.Fragment>\n      );\n    }\n    //SECCION DETALLES DEL QUE SE LE HIZO CLICK\n    if (this.state.section === 'details') {\n      return (\n        <React.Fragment>\n          <Back goToHome={this.goToHome} />\n          <Details addToFav={this.addToFav} fav={this.state.peopleClick.fav} name={this.state.peopleClick.name} gender={this.state.peopleClick.gender} birth_year={this.state.peopleClick.birth_year} height={this.state.peopleClick.height} mass={this.state.peopleClick.mass} films={this.state.peopleClick.films} />\n        </React.Fragment>\n      );\n    }\n    //SECCION FAVORITOS\n    if (this.state.section === 'fav') {\n      return (\n        <React.Fragment>\n          <Filter section={this.state.section} goToHome={this.goToHome} />\n          <div className=\"grid\">\n            {this.state.people.map(people => {\n              if (people.fav === true) {\n               return <Card addToFav={this.addToFav} peopleClick={this.peopleClick} fav={people.fav} name={people.name} gender={people.gender} birth_year={people.birth_year} height={people.height} mass={people.mass} films={people.films} key={people.name} />\n              } else {return null};\n            })}\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n\n  // recoge los datos de la card que se hizo click, los agrega al estado en peopleClick, y cambia la seccion a details\n  peopleClick = (name) => {\n    this.setState({\n      peopleClick: name,\n    });\n    this.goToDetails();\n  }\n\n  //agrega a favoritos\n  addToFav = (forAdd) => {\n    this.setState({\n      people: this.state.people.map((people) => {\n        if (people.name === forAdd.name) {\n          const {name, gender, birth_year, height, mass, films} = people;\n          const fav = !people.fav;\n          const changeFav = {name, gender, birth_year, height, mass, films, fav};\n          return changeFav;\n        } else { return people}\n      })\n    });\n  }\n\n// VA A LA SECCION HOME\n  goToHome = () => {\n    this.setState({\n      section: 'home'\n    });\n  }\n\n// VA A LA SECCION DETALLES\n  goToDetails = () => {\n    this.setState({\n      section: 'details'\n    });\n  }\n\n//VA A LA SECCION FAVORITOS\n  goToFav = () => {\n    this.setState({\n      section: 'fav'\n    });\n  }\n\n  render() {\n    //SI HAY ERROR LO DIBUJA\n    if (this.state.error !== '') {\n      return (<div>ERROR: {this.state.error}</div>);\n    }\n    return (\n      <React.Fragment>\n        <Navbar />\n        {this.currentSection()}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}